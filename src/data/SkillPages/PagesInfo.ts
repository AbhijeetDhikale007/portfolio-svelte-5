type Array = [{ Title: string, Img: string, Info: string, Url: string }]

export const C: Array = [
    { Title: 'C', Img: 'CLang', Info: 'Hypertext Markup Language (HTML) is the standard markup language for documents designed to be displayed in a web browser. It defines the content and structure of web content. It is often assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript, a programming language.\n\nWeb browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for its appearance.', Url: 'https://en.cppreference.com/w/c'}
]

export const CPlus: Array = [
    { Title: 'C++', Img: 'CPlus', Info: "C++ is a cross-platform language that can be used to create high-performance applications. C++ was developed by Bjarne Stroustrup, as an extension to the C language. C++ gives programmers a high level of control over system resources and memory. The language was updated 5 major times in 2011, 2014, 2017, 2020, and 2023 to C++11, C++14, C++17, C++20, and C++23. C++ is one of the world's most popular programming languages.\n\nC++ can be found in today's operating systems, Graphical User Interfaces, and embedded systems. C++ is an object-oriented programming language which gives a clear structure to programs and allows code to be reused, lowering development costs. C++ is portable and can be used to develop applications that can be adapted to multiple platforms. C++ is fun and easy to learn! As C++ is close to C, C# and Java, it makes it easy for programmers to switch to C++ or vice versa.", Url: 'https://isocpp.org'}
]

export const TypeScript: Array = [
    { Title: 'TypeScript', Img: 'TypeScript', Info: "JavaScript is a loosely typed language. It can be difficult to understand what types of data are being passed around in JavaScript. In JavaScript, function parameters and variables don't have any information! So developers need to look at documentation, or guess based on the implementation.\n\nTypeScript allows specifying the types of data being passed around within the code, and has the ability to report errors when the types don't match. For example, TypeScript will report an error when passing a string into a function that expects a number. JavaScript will not.", Url: 'https://www.typescriptlang.org'}
]

export const JavaScript: Array = [
    { Title: 'JavaScript', Img: 'JavaScript', Info: "JavaScript is a programming language used to create dynamic content for websites. It is a lightweight, cross-platform, and single-threaded programming language. JavaScript is an interpreted language that executes code line by line providing more flexibility.\n\nHTML adds Structure to a web page, CSS styles it and JavaScript brings it to life by allowing users to interact with elements on the page, such as actions on clicking buttons, filling out forms, and showing animations.\n\nJavaScript on the client side is directly executed in the user's browser. Almost all browsers have JavaScript Interpreter and do not need to install any software. There is also a browser console where you can test your JavaScript code.\n\nJavaScript is also used on the Server side (on Web Servers) to do operations like accessing databases, file handling and security features to send responses, to browsers.", Url: 'https://262.ecma-international.org'}
]

export const HTML: Array = [
    { Title: 'HTML', Img: 'HTML', Info: 'Hypertext Markup Language (HTML) is the standard markup language for documents designed to be displayed in a web browser. It defines the content and structure of web content. It is often assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript, a programming language.\n\nWeb browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for its appearance.', Url: 'https://html.spec.whatwg.org/multipage'}
]

export const CSS: Array = [
    { Title: 'CSS', Img: 'CSS', Info: 'CSS is among the core languages of the open web and is standardized across Web browsers according to W3C specifications. Previously, the development of various parts of CSS specification was done synchronously, which allowed the versioning of the latest recommendations. You might have heard about CSS1, CSS2.1, or even CSS3. There will never be a CSS3 or a CSS4; rather, everything is now just "CSS" with individual CSS modules having version numbers.', Url: 'https://www.w3.org/Style/CSS/Overview.en.html'}
]

export const SCSS: Array = [
    { Title: 'SCSS', Img: 'Sass', Info: 'Sass is the most mature, stable, and powerful professional grade CSS extension language in the world.\n\nSass is completely compatible with all versions of CSS. We take this compatibility seriously, so that you can seamlessly use any available CSS libraries.\n\nSass boasts more features and abilities than any other CSS extension language out there. The Sass Core Team has worked endlessly to not only keep up, but stay ahead.\n\nSass has been actively supported for about 18 years by its loving Core Team.\n\nOver and over again, the industry is choosing Sass as the premier CSS extension language.\n\nSass is actively supported and developed by a consortium of several tech companies and hundreds of developers.\n\nThere are an endless number of frameworks built with Sass. Bootstrap, Bourbon, and Susy just to name a few.', Url: 'https://sass-lang.com'}
]

export const UnoCSS: Array = [
    { Title: 'UnoCSS', Img: 'Unocss', Info: "UnoCSS - Instant On-demand Atomic CSS Engine\n\nFully Customizable: No core utilities, all functionalities are provided via presets.\n\nInstant:No parsing, no AST, no scanning. It's 5x faster than Windi CSS or Tailwind CSS JIT.\n\nLightweight: Zero deps and browser friendly: ~6kb min+brotli\n\nRich Integrations: First class support of Vite, Webpack, PostCSS, CLI, VS Code, ESLint, etc.\n\nShortcuts: Aliasing or grouping utilities, dynamically", Url: 'https://unocss.dev'}
]

export const TailwindCSS: Array = [
    { Title: 'Tailwind CSS', Img: 'Tailwind', Info: "Tailwind CSS is an open-source CSS framework. Unlike other frameworks, like Bootstrap, it does not provide a series of predefined classes for elements such as buttons or tables.\n\nInstead, it creates a list of 'utility' CSS classes that can be used to style each element by mixing and matching.", Url: 'https://tailwindcss.com'}
]

export const Bootstrap: Array = [
    { Title: 'Bootstrap', Img: 'Bootstrap', Info: 'Bootstrap (formerly Twitter Bootstrap) is a free and open-source CSS framework directed at responsive, mobile-first front-end web development.\n\nIt contains HTML, CSS and (optionally) JavaScript-based design templates for typography, forms, buttons, navigation, and other interface components.', Url: 'https://getbootstrap.com'}
]

export const WordPress: Array = [
    { Title: 'WordPress', Img: 'WordPress', Info: 'WordPress (WP, or WordPress.org) is a web content management system. It was originally created as a tool to publish blogs but has evolved to support publishing other web content, including more traditional websites, mailing lists, Internet forums, media galleries, membership sites, learning management systems, and online stores.\n\nAvailable as free and open-source software, WordPress is among the most popular content management systems - it was used by 43.1% of the top 10 million websites as of December 2023.', Url: 'https://wordpress.com'}
]

export const Webflow: Array = [
    { Title: 'Webflow', Img: 'Webflow', Info: 'Webflow is a web design and development platform that allows users to create responsive websites visually, without needing to write code. Launched in 2013, it combines a content management system (CMS), a website builder, and hosting services, making it a comprehensive solution for web designers, developers, and businesses.\n\nVisual Design Interface: Webflow offers a drag-and-drop interface that allows users to design websites visually. Users can manipulate elements on the page, adjust layouts, and customize styles, making it accessible for those without extensive coding knowledge.\n\nResponsive Design: Websites built on Webflow are automatically responsive, meaning they will adapt to different screen sizes and devices. Users can customize breakpoints to fine-tune the design for various devices.\n\nCMS Functionality: Webflow includes a built-in content management system that enables users to create and manage dynamic content. This is particularly useful for blogs, portfolios, and websites with frequently updated content.\n\nE-commerce Capabilities: Webflow provides e-commerce features, allowing users to create online stores. It supports product listings, shopping carts, and checkout processes, along with customizable designs for product pages.\n\nHosting and Performance: Webflow offers hosting services with fast loading times and reliable uptime. It uses a content delivery network (CDN) to ensure that websites load quickly for visitors around the world.\n\nSEO Tools: Webflow includes built-in SEO features, such as customizable meta tags, alt text for images, and options for creating clean URLs. Users can optimize their websites for search engines easily.\n\nInteractions and Animations: The platform allows users to create complex interactions and animations without coding. This can enhance user engagement and improve the overall user experience.\n\nCollaboration and Client Handoff: Webflow facilitates collaboration among team members and offers features for client handoff, making it easier for designers to work with clients and developers.', Url: 'https://webflow.com/'}
]

export const Svelte: Array = [
    { Title: 'Svelte', Img: 'Svelte', Info: "Svelte is a modern JavaScript framework for building user interfaces. Unlike traditional frameworks like React or Vue, which do much of their work in the browser, Svelte shifts the work to a build step. This means that Svelte compiles your components into efficient JavaScript code at build time, rather than at runtime, resulting in faster performance and a smaller bundle size.\n\nCompile-Time Framework: Svelte compiles components into highly optimized vanilla JavaScript at build time, which reduces the amount of code that needs to be sent to the browser and improves loading times.\n\nReactivity: Svelte uses a unique approach to reactivity. Instead of relying on a virtual DOM, Svelte updates the DOM directly when state changes occur, leading to more efficient updates and a smoother user experience.\n\nSimplicity and Readability: Svelte syntax is designed to be straightforward, making it easy to understand and use. The framework allows developers to write less boilerplate code, which can lead to more maintainable applications.\n\nNo Virtual DOM: By eliminating the virtual DOM, Svelte can directly manipulate the DOM, resulting in less overhead and better performance, especially in dynamic applications with many UI updates.\n\nScoped Styles: Svelte allows for scoped CSS styles, meaning styles defined within a component are only applied to that component. This helps avoid style conflicts and makes it easier to manage styles in large applications.\n\nBuilt-In Animation Support: Svelte has built-in support for animations and transitions, allowing developers to easily add engaging animations to their applications with minimal effort.\n\nRich Ecosystem: While Svelte itself is minimalistic, it has a growing ecosystem of libraries and tools, including Sapper (a framework for building web applications with Svelte) and SvelteKit (a framework for building full-stack applications).\n\nEcosystem Tools: Svelte's ecosystem includes tools like SvelteKit, which streamlines the development of Svelte applications with features such as routing, server-side rendering, and static site generation.", Url: 'https://svelte.dev'}
]

export const React: Array = [
    { Title: 'React', Img: 'React', Info: "React is a popular open-source JavaScript library for building user interfaces, particularly single-page applications (SPAs). Developed and maintained by Facebook, React allows developers to create large web applications that can change data without reloading the page. Its component-based architecture and declarative style make it a widely-used choice for front-end development.\n\nComponent-Based Architecture: React encourages the development of reusable components, allowing developers to encapsulate logic and presentation in self-contained units. This modular approach promotes code reusability and easier maintenance.\n\nJSX Syntax: React uses JSX (JavaScript XML), which allows developers to write HTML-like syntax within JavaScript code. JSX makes it easier to visualize the structure of the UI and improves the readability of the code.\n\nVirtual DOM: React uses a virtual DOM to optimize rendering performance. When the state of an application changes, React creates a virtual representation of the DOM, compares it to the previous version, and updates only the parts of the actual DOM that have changed. This minimizes direct manipulation of the DOM, which can be slow.\n\nUnidirectional Data Flow: React follows a unidirectional data flow model, meaning that data flows from parent components to child components. This makes it easier to understand how data changes affect the UI, leading to more predictable applications.\n\nState Management: React manages component state effectively with built-in hooks like useState and useReducer. For more complex state management across larger applications, libraries such as Redux or Context API can be integrated.\n\nLifecycle Methods and Hooks: React components have lifecycle methods (in class components) that allow developers to hook into different stages of a component's lifecycle. With the introduction of hooks in React 16.8, functional components can now also manage state and side effects, making it easier to share logic between components.", Url: 'https://react.dev'}
]

export const Angular: Array = [
    { Title: 'Angular', Img: 'Angular', Info: 'Angular is a robust open-source web application framework developed and maintained by Google. It is designed to facilitate the development of dynamic, single-page applications (SPAs) and is built using TypeScript, a superset of JavaScript. Angular provides a comprehensive set of tools and features that support a structured approach to building complex applications.\n\nComponent-Based Architecture: Angular applications are built using components, which encapsulate the logic, template, and styling of a portion of the UI. This modular approach promotes reusability and better organization of code.\n\nTypeScript: Angular is written in TypeScript, which adds static typing to JavaScript. TypeScript helps catch errors at compile time and improves code quality and readability, making it easier to manage large codebases.\n\nDependency Injection: Angular has a built-in dependency injection system that simplifies the management of services and their dependencies. This promotes better organization of code and makes it easier to test components.\n\nTwo-Way Data Binding: Angular supports two-way data binding, allowing automatic synchronization between the model and the view. When the model changes, the view updates automatically, and vice versa, simplifying the development process.\n\nDirectives: Angular uses directives to extend HTML with custom attributes and behaviors. Directives can manipulate the DOM, create reusable components, and manage state, enhancing the capabilities of standard HTML.\n\nRouting: Angular provides a powerful routing module that allows developers to define navigation paths within the application. This makes it easy to create SPAs with multiple views and dynamic URL handling.', Url: 'https://angular.dev'}
]

export const Threejs: Array = [
    { Title: 'Threejs', Img: 'Threejs', Info: 'Three.js is a popular open-source JavaScript library used for creating and displaying 3D graphics in the web browser using WebGL (Web Graphics Library). It simplifies the process of working with 3D graphics, allowing developers to create complex 3D scenes without needing to delve deeply into the lower-level details of WebGL.\n\nBrowser Compatibility: Three.js abstracts away the complexities of WebGL, enabling developers to create 3D graphics that work across different browsers and platforms.\n\nEasy-to-Use API: The library provides a straightforward API that makes it easier to create and manipulate 3D objects, materials, lights, cameras, and scenes. This reduces the learning curve for developers new to 3D graphics.\n\nRich Geometry and Materials: Three.js includes a wide variety of built-in geometries (e.g., cubes, spheres, planes) and materials (e.g., basic, standard, and physical materials) that developers can use to create visually appealing 3D objects.\n\nLighting and Shadows: The library supports various types of lights (ambient, directional, point, spot) and shadow mapping to create realistic lighting effects in 3D scenes.\n\nAnimation Support: Three.js provides robust support for animations, including keyframe animations, skeletal animations, and morph targets. This allows developers to create dynamic and interactive experiences.', Url: 'https://threejs.org'}
]

export const MySQL: Array = [
    { Title: 'MySQL', Img: 'MySQL', Info: 'MySQL is an open-source relational database management system (RDBMS) that uses Structured Query Language (SQL) for database operations. It was originally developed by MySQL AB, which was founded in 1995, and is now owned by Oracle Corporation since its acquisition of Sun Microsystems in 2010.\n\nRelational Database Management: MySQL organizes data into tables that can be related based on common data attributes, allowing for complex queries and data manipulations.\n\nOpen Source: MySQL is released under the GNU General Public License, which means it is free to use, modify, and distribute. There are also commercial versions available that offer additional features and support.\n\nCross-Platform: It can run on various operating systems, including Windows, Linux, and macOS, making it flexible for different server environments.\n\nScalability: MySQL can handle large databases and high-concurrency environments, making it suitable for both small applications and large-scale systems.\n\nHigh Performance: With features like a query cache and support for indexing, MySQL can deliver high performance in data retrieval.\n\nSecurity: MySQL provides features like SSL support, data encryption, and advanced authentication mechanisms to protect data.', Url: 'https://www.mysql.com'}
]

export const Postman: Array = [
    { Title: 'Postman', Img: 'Postman', Info: 'Postman is a collaboration platform for API development that simplifies the process of developing and testing APIs (Application Programming Interfaces). Originally launched as a Chrome extension in 2012, Postman has grown into a standalone application that supports a wide range of API-related tasks, making it a favorite among developers and teams working with RESTful APIs and other types.\n\nAPI Development: Postman allows developers to design, create, and test APIs quickly and effectively. Users can define endpoints, request types (GET, POST, PUT, DELETE, etc.), headers, body data, and authorization parameters.\n\nUser-Friendly Interface: The intuitive and graphical user interface makes it easy for both experienced developers and newcomers to understand and use. This interface provides features like a built-in code generation tool that produces code snippets in multiple programming languages.\n\nTesting Capabilities: Postman enables users to write and execute automated tests for APIs. It supports JavaScript-based test scripts that can validate responses, check for status codes, and perform various assertions.\n\nCollections: Users can organize requests into collections, making it easier to manage and share related API calls. This is particularly useful for teams working on complex APIs.\n\nEnvironments: Postman allows users to create environments with different sets of variables (such as URLs and tokens), enabling quick switching between different configurations (e.g., development, testing, production).', Url: 'https://www.postman.com'}
]

export const VSCode: Array = [
    { Title: 'VS Code', Img: 'VSCode', Info: 'Visual Studio Code (VS Code) is a free, open-source code editor developed by Microsoft that has gained widespread popularity among developers for its versatility and powerful features. It was first released in 2015 and has since evolved into one of the leading code editors available. It supports various programming languages and offers a rich ecosystem of extensions for additional functionality.\n\nCross-Platform: VS Code runs on Windows, macOS, and Linux, allowing developers to work on multiple platforms with the same experience.\n\nExtensibility with Extensions: The editor has a vast library of extensions available through the Visual Studio Code Marketplace. These extensions can add language support, debuggers, themes, and other tools to enhance the development experience.\n\nIntegrated Terminal: VS Code includes a built-in terminal, allowing developers to run command-line tasks without leaving the editor. This feature supports various shells, such as Command Prompt, PowerShell, and Bash.\n\nIntellisense: Intellisense provides intelligent code completion, parameter info, and quick info, which helps speed up coding by offering suggestions and context-aware assistance.\n\nGit Integration: VS Code has built-in support for Git, allowing developers to track changes, commit, and manage branches directly from the editor. This streamlines the version control process.', Url: 'https://code.visualstudio.com'}
]

export const GitHub: Array = [
    { Title: 'GitHub', Img: 'GitHub', Info: 'GitHub is a web-based platform designed for version control and collaboration that allows developers to store, manage, and track changes to their code repositories. Launched in 2008, it has become one of the most prominent tools in the software development community. GitHub is built on top of Git, a distributed version control system created by Linus Torvalds, which allows multiple developers to work on a project simultaneously without interfering with each other’s changes.\n\nVersion Control: GitHub uses Git to manage the versioning of code, allowing developers to keep track of changes, revert to previous versions, and branch off new features seamlessly.\n\nRepositories: A repository (or repo) is where your project files are stored. It includes the code, documentation, and metadata about the project. Repositories can be public (accessible to everyone) or private (restricted access).\n\nCollaboration Tools: GitHub provides features like pull requests, code reviews, discussions, and comments that enable efficient collaboration among team members. Pull requests allow contributors to propose changes and review them before merging them into the main codebase.\n\nIssues and Project Management: The platform includes issue tracking, which helps teams manage bugs, feature requests, and tasks. Project boards and milestones allow teams to organize workflows and track progress on projects.\n\nDocumentation: GitHub supports documentation with Markdown files. The README file in a repository typically serves as the introductory document, explaining the purpose and usage of the project.', Url: 'https://github.com'}
]

export const ProjectIDX: Array = [
    { Title: "Google's Project IDX", Img: 'IDX', Info: "Project IDX is a cloud-based development environment that Google announced as part of its efforts to enhance web and application development. This project aims to provide developers with a streamlined, integrated development experience tailored for building web and mobile applications, particularly those using modern frameworks and technologies.\n\nCloud-Based Development: Project IDX allows developers to write and run code in a browser-based IDE, meaning you don't need to set up a local development environment. This can significantly reduce the barriers to entry for new developers and streamline workflow across teams.\n\nPreconfigured Environments: Developers can easily start projects with preconfigured environments, which can save time on setup and configuration for different technologies or frameworks.\n\nMulti-Framework Support: The platform often supports multiple frameworks, including Flutter (for mobile development), Angular, React, and others, allowing developers to choose the tools that best suit their projects.\n\nIntegrated Collaboration Tools: Project IDX may include various collaboration features, enabling teams to work together in real-time, share code snippets, and conduct pair programming directly within the platform.\n\nVersion Control Integration: As part of a seamless workflow, Project IDX likely integrates with version control systems like Git and GitHub, allowing developers to manage code versions and collaborate more effectively.\n\nDeployment Capabilities: The platform can include features for deploying applications directly to cloud services or web servers, streamlining the process from development to production.", Url: 'https://idx.dev'}
]

export const Eclipse: Array = [
    { Title: 'Eclipse', Img: 'Eclipse', Info: 'Eclipse is a widely used integrated development environment (IDE) primarily for Java development, although it supports a variety of programming languages through the use of plugins. Originally developed by IBM and released as an open-source project in 2001, Eclipse has since become one of the most popular IDEs available and is maintained by the Eclipse Foundation.\n\nRich Client Platform: Eclipse is built on a rich client platform that users can extend with numerous plugins. This modular architecture allows developers to customize their IDE experiences based on their project needs.\n\nJava Development: Eclipse is particularly known for its robust support for Java development, including features like: Syntax highlighting, Code completion, Refactoring tools, Built-in debugging, JUnit integration for unit testing.\n\nSupport for Multiple Languages: Besides Java, Eclipse supports various other programming languages, including C, C++, Python, PHP, Perl, and more, through community-developed plugins.\n\nVersion Control Integration: Eclipse integrates with popular version control systems, including Git, SVN (Subversion), and Mercurial, through plugins, making it easier for teams to manage source code and collaborate.\n\nUser Interface: The user interface is organized into perspectives, which are sets of views and editors tailored for specific tasks, such as Java development, web development, or debugging.', Url: 'https://eclipseide.org'}
]

export const IntelliJ: Array = [
    { Title: 'IntelliJ', Img: 'IntelliJ', Info: 'IntelliJ IDEA is a powerful Integrated Development Environment (IDE) developed by JetBrains, primarily aimed at Java development, but it also supports a wide range of other programming languages and frameworks. It is known for its intelligent code assistance, ergonomic design, and extensive features that enhance developer productivity.\n\nSmart Code Assistance: IntelliJ IDEA provides advanced code completion, syntax highlighting, error detection, and refactoring tools. These features help developers write code faster and more accurately by suggesting relevant code snippets, methods, and variables.\n\nVersion Control Integration: The IDE integrates seamlessly with version control systems like Git, Mercurial, and Subversion, making it easy to manage code versions, branches, and changes directly within the IDE.\n\nBuilt-in Terminal: IntelliJ IDEA includes a built-in terminal, allowing developers to execute shell commands and run scripts without leaving the IDE.\n\nSupport for Multiple Languages: While IntelliJ IDEA is primarily designed for Java, it supports various other languages such as Kotlin, Groovy, Scala, JavaScript, TypeScript, HTML, CSS, and more. This makes it versatile for multi-language projects.\n\nFramework Support: IntelliJ IDEA includes support for popular frameworks and technologies such as Spring, Hibernate, Java EE, and many front-end frameworks like Angular, React, and Vue.js.', Url: 'https://www.jetbrains.com/idea'}
]